[package]
name = "bin_packer_3d_wasm"
version = "0.1.1"
authors = ["modulitos <modulitos@users.noreply.github.com>"]
edition = "2018"

[lib]
crate-type = ["cdylib", "rlib"]

[features]
default = ["console_error_panic_hook"]

[dependencies]
wasm-bindgen = { version = "0.2.63", features = ["serde-serialize"] }
bin_packer_3d = "2.0.0-beta-1"

serde = { version = "1.0", features = ["derive"] }

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.6", optional = true }

# `wee_alloc` is a tiny allocator for wasm that is only ~1K in code size
# compared to the default allocator's ~10K. It is slower than the default
# allocator, however.
#
# Unfortunately, `wee_alloc` requires nightly Rust when targeting wasm for now.
wee_alloc = { version = "0.4.5", optional = true }
js-sys = "0.3.45"

serde_json = "1.0.59"
thiserror = "1.0.20"

# allows us to use console logging within our wasm:
# https://rustwasm.github.io/docs/book/reference/debugging.html#logging-with-the-console-apis
[dependencies.web-sys]
version = "0.3"
features = [
    "console",
]

#[dependencies.bin_packer_3d]
#path = "../bin_packer_3d_rust"

[dev-dependencies]
wasm-bindgen-test = "0.3.13"

[profile.release]
# Tell `rustc` to optimize for small code size.
opt-level = "s"
# enable debug symbols, and more:
# debug = true

## Allows us to return a String from our render method.
## https://stackoverflow.com/a/64507864/1884158
#[package.metadata.wasm-pack.profile.release]
#wasm-opt = ["-Oz", "--enable-mutable-globals"]
